package in.co.constructor;

/*	-Constructor is just like a method.
	-it does not have return type.
	-its name is same as Class name
	-it is called at the time of object instantiation(new Shape())
	-Constructors are used to initiailize instance/class variables.
	-A class may have multiple constructors with different number of parameters.
	*/

/*	****** Multiple Constructors******	
	- one class may have more than one constructors
	- multiple constructors are used to initialize different sets of class attributes.
	- When a class has more than one constructors, it is called "Constructor overloading"
	- Constructors those receive parameters are called "Parameterized constructors"
*/

/******
 * Default Constructors ***** - default Constructors does not recieve any
 * parameters --public Shape(){...} - if user does not define any constructors
 * then Default constructor will be created by Java Compiler - But if user
 * defines single or multiple constructors then default constructor will not be
 * generated by java compiler
 */
	
	// example of shape constructor and constructor overloading
public class Shape {

	private String color=null;
	private int borderWidth=0;
	
	public Shape() {//default Constructor
		//System.out.println("This is default constructor");
		
	}
	public Shape(String color,int borderWidth) {//constructor overloading
		this.color=color;
		this.borderWidth=borderWidth;
		
	}
	public int getBorderWidth() {
		return borderWidth;
	}
	public String getColor() {
		return color;
	}
	public double area() {
		return 0.0;
	}
	
}
